---- 데이터 조작어 ----
-- 테이블 생성
CREATE TABLE DEPT_COPY AS SELECT * FROM DEPT;

-- 테이블 삭제
-- DROP TABLE DEPT_COPY;

-- 테이블에 데이터 추가하기
-- INSERT
-- INSERT INTO [열1, 열2,... 열N] VALUES (열1에 들어갈 데이터, 열2에 들어갈 데이터...열N에 들어갈 데이터);
-- 지정한 열 개수와 각 열에 입력할 데이터 개수가 일치하지 않거나 자료형이 맞지 않는 경우 또는 열 길이를 초과하는 데이터를 지정하는 경우 에러
INSERT INTO DEPT_COPY (DEPTNO, DNAME, LOC) VALUES (50, 'DATABASE', 'SEOUL');

SELECT * FROM DEPT_COPY;

-- INSERT문에 열 지정 없이 데이터 추가하기
INSERT INTO DEPT_COPY VALUES(60, 'NETWORK', 'BUSAN');

-- NULL 데이터 입력하기
INSERT INTO DEPT_COPY (DEPTNO, DNAME, LOC) VALUES (70, 'WEB', NULL);
-- 빈 공백 문자열로 NULL 입력하기
INSERT INTO DEPT_COPY (DEPTNO, DNAME, LOC) VALUES (80, 'MOBILE', ' ');
-- 열 데이터를 넣지 않는 방식으로 NULL 데이터 입력하기
INSERT INTO DEPT_COPY (DEPTNO, LOC) VALUES (90, 'INCHEON');

-- 날짜 데이터 입력하기
CREATE TABLE EMP_COPY AS SELECT * FROM EMP WHERE 1 <> 1;
DROP TABLE EMP_COPY;
SELECT * FROM EMP_COPY;

-- 날짜 사이에 / 입력
INSERT INTO EMP_COPY (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        VALUES (9999, 'HONG', 'PRESIDENT', NULL, '2001/01/01', 5000, 1000, 10);
-- 날짜 사이에 - 입력
INSERT INTO EMP_COPY (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        VALUES (1111, 'SUNG', 'MANAGER', 9999, '2001-01-05', 4000, NULL, 20);

-- TO_DATE 함수를 사용하여 날짜 데이터 입력하기
INSERT INTO EMP_COPY (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        VALUES (2111, 'LEE', 'MANAGER', 9999, TO_DATE('07/01/2001', 'DD/MM/YYYY'), 4000, NULL, 20);
-- SYSDATE를 사용하여 날짜 데이터 입력하기
INSERT INTO EMP_COPY (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        VALUES (3111, 'SIM', 'MANAGER', 9999, SYSDATE, 4000, NULL, 30);
        
-- 서브쿼리로 여러 데이터 추가하기
INSERT INTO EMP_COPY (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, E.DEPTNO
        FROM EMP E, SALGRADE S
        WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL AND S.GRADE = 1;
        
-- 다중 INSERT문
INSERT ALL
    INTO EMP_COPY (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (1111, 'KONG', 'SALESMAN', NULL, SYSDATE, 2000, NULL, 30)
    INTO EMP_COPY (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (2222, 'SONG', 'SALESMAN', NULL, SYSDATE, 2000, NULL, 30)
    INTO EMP_COPY (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (3333, 'RONG', 'SALESMAN', NULL, SYSDATE, 2000, NULL, 30)
    SELECT * FROM DUAL;

-- 데이터 수정하기
-- UPDATE [변경할 테이블] SET [변경할 열1] = [데이터], [변경할 열2] = [데이터],... [WHERE 데이터를 변경할 대상 행을 선별하기 위한 조건]
-- UPDATE : 데이터를 수정할 테이블 지정
-- SET    : 변경할 열을 지정, 데이터 입력
-- WHERE  : 변경 데이터를 선별하기 위한 조건식

CREATE TABLE DEPT_COPY2 AS SELECT * FROM DEPT;
SELECT * FROM DEPT_COPY2;

-- 데이터 전체 수정하기
UPDATE DEPT_COPY2 SET LOC = 'SEOUL';

-- ROLLBACK으로 테이블 내용을 이전 상태로 되돌리기
-- UPDATE 실행 취소
ROLLBACK;

-- 데이터 일부분만 수정하기
-- WHERE절과 조건식을 통해 수정할 행을 지정
UPDATE DEPT_COPY2 SET DNAME = 'DATABASE', LOC = 'SEOUL' WHERE DEPTNO = 40;

-- 서브쿼리를 사용해 데이터 수정하기
-- 여러 열을 한번에 수정하는 경우
-- DEPT_COPY2의 부서 번호가 40인 행의 DNAME과 LOC를 DEPT 테이블의 부서 번호가 40번인 행의 데이터로 수정
UPDATE DEPT_COPY2 SET (DNAME, LOC) = (SELECT DNAME, LOC FROM DEPT WHERE DEPTNO =40) WHERE DEPTNO = 40;

-- 열 하나하나를 수정하는 경우
-- 서브쿼리를 통해 열 마다 다른 조건식을 사용할 수 있다.
UPDATE DEPT_COPY2 SET DNAME = (SELECT DNAME FROM DEPT WHERE DEPTNO = 40),
                        LOC = (SELECT LOC FROM DEPT WHERE DEPTNO = 40)
                        WHERE DEPTNO = 40;
                        
-- WHERE절에 서브쿼리 사용하기
UPDATE DEPT_COPY2 SET LOC = 'SEOUL'
    WHERE DEPTNO = (SELECT DEPTNO FROM DEPT_COPY2 WHERE DNAME = 'OPERATIONS');

-- JOB이 ANALYST인 사원과 같은 부서에서 근무하는 사원의 사원 번호를 사용하여 급여를 5000으로 변경    
UPDATE EMP_COPY3 SET SAL = 5000
    WHERE DEPTNO = ANY (SELECT DEPTNO FROM EMP_COPY3 WHERE JOB = 'ANALYST');

-- 서브쿼리 중첩
UPDATE EMP_COPY3 SET SAL = 5000
    WHERE EMPNO = ANY (SELECT EMPNO FROM EMP_COPY3 WHERE DEPTNO = ALL (SELECT DEPTNO FROM EMP_COPY3 WHERE JOB = 'ANALYST') AND JOB != 'ANALYST');
    
SELECT * FROM EMP_COPY3 
WHERE EMPNO = ANY (SELECT EMPNO FROM EMP_COPY3 WHERE DEPTNO = ALL (SELECT DEPTNO FROM EMP_COPY3 WHERE JOB = 'ANALYST') AND JOB != 'ANALYST');

-- JOIN 사용 
UPDATE EMP_COPY3 SET SAL = 5000
    WHERE  EMPNO IN ( SELECT DISTINCT B.EMPNO FROM EMP A, EMP B 
    WHERE A.JOB = 'ANALYST' AND A.DEPTNO = B.DEPTNO AND B.JOB != 'ANALYST');
    
SELECT * FROM EMP_COPY3;

-- 데이터 삭제하기
-- DELETE [FROM] [테이블 이름] [WHERE 삭제하기 위한 조건식];
-- DELETE [FROM] : 삭제할 테이블을 지정
-- WHERE         : 삭제 데이터를 선별하는 조건식
CREATE TABLE EMP_COPY3 AS SELECT * FROM EMP;
SELECT * FROM EMP_COPY2;

-- 데이터 일부만 삭제하기
-- 직책이 MANAGER인 사원의 데이터 삭제
DELETE FROM EMP_COPY2 WHERE JOB = 'MANAGER';

-- 서브쿼리를 이용하여 데이터 삭제하기
-- 급여 등급이 3등급이고 30번 부서에 속한 사원 번호 데이터가 있는 행을 삭제
DELETE FROM EMP_COPY2 WHERE EMPNO IN (SELECT E.EMPNO FROM EMP_COPY2 E, SALGRADE S
                                        WHERE E.SAL BETWEEN LOSAL AND HISAL AND S.GRADE = 3 AND DEPTNO = 30);

-- 데이터 전체 삭제
-- 테이블의 모든 데이터가 삭제된다. 테이블은 삭제되지 않음.
DELETE FROM EMP_COPY2;

-- 책 287P 실습 문제
-- 기존 테이블을 복사해서 진행
CREATE TABLE CHAP10HW_EMP AS SELECT * FROM EMP;
CREATE TABLE CHAP10HW_DEPT AS SELECT * FROM DEPT;
CREATE TABLE CHAP10HW_SALGRADE AS SELECT * FROM SALGRADE;

SELECT * FROM CHAP10HW_EMP;
SELECT * FROM CHAP10HW_DEPT;
SELECT * FROM CHAP10HW_SALGRADE;

-- CHAP10HW_DEPT 테이블에 50, 60, 70, 80번 부서를 등록하라
INSERT ALL
    INTO CHAP10HW_DEPT VALUES (50, 'ORACLE', 'BUSAN')
    INTO CHAP10HW_DEPT VALUES (60, 'SQL', 'ILSAN')
    INTO CHAP10HW_DEPT VALUES (70, 'SELECT', 'INCHEON')
    INTO CHAP10HW_DEPT VALUES (80, 'DML', 'BUNDANG')
    SELECT * FROM DUAL;
    
-- CHAP10HW_EMP에 8명의 사원 정보를 등록하라
INSERT ALL
    INTO CHAP10HW_EMP VALUES (7201, 'TEST_USER1', 'MANAGER', 7788, '2016/01/02', 4500, NULL, 50)
    INTO CHAP10HW_EMP VALUES (7202, 'TEST_USER2', 'CLERK', 7201, '2016/02/21', 1800, NULL, 50)
    INTO CHAP10HW_EMP VALUES (7203, 'TEST_USER3', 'ANALYST', 7201, '2016/04/11', 3400, NULL, 60)
    INTO CHAP10HW_EMP VALUES (7204, 'TEST_USER4', 'SALESMAN', 7201, '2016/05/31', 2700, 300, 60)
    INTO CHAP10HW_EMP VALUES (7205, 'TEST_USER5', 'CLERK', 7201, '2016/07/20', 2600, NULL, 70)
    INTO CHAP10HW_EMP VALUES (7206, 'TEST_USER6', 'CLERK', 7201, '2016/09/08', 2600, NULL, 70)
    INTO CHAP10HW_EMP VALUES (7207, 'TEST_USER7', 'LECTURER', 7201, '2016/10/28', 2300, NULL, 80)
    INTO CHAP10HW_EMP VALUES (7208, 'TEST_USER8', 'STUDENT', 7201, '2018/03/09', 1200, NULL, 80)
    SELECT * FROM DUAL;

-- CHAP10HW_EMP에 속한 사원 중 50번 부서에서 근무하는 사원들의 평균 급여보다 많은 급여를 받고 있는 사원들을 70번 부서로 이동하라
UPDATE CHAP10HW_EMP 
    SET DEPTNO = 70
    WHERE SAL >= ANY (SELECT AVG(SAL) FROM CHAP10HW_EMP WHERE DEPTNO = 50);

-- CHAP10HW_EMP에 속한 사원 중 60번 부서의 사원 중에 입사일이 가장 빠른 사원보다 늦게 입사한 사원의 급여를 10% 인상하고 80번 부서로 이동하라
ROLLBACK;
UPDATE CHAP10HW_EMP SET DEPTNO = 80, SAL = SAL * 1.1
    WHERE HIREDATE > ANY (SELECT MIN(HIREDATE) FROM CHAP10HW_EMP WHERE DEPTNO = 60);

-- CHAP10HW_EMP에 속한 사원 중 급여 등급이 5인 사원을 삭제하라
DELETE FROM CHAP10HW_EMP
    WHERE SAL = ANY (SELECT SAL FROM CHAP10HW_EMP E, CHAP10HW_SALGRADE S WHERE E.SAL BETWEEN LOSAL AND HISAL AND S.GRADE = 5);

---- 트랜젝션 ----
-- SQL문의 작업 단위
-- 테이블에 작업한 데이터를 최종적으로 반영할지 말지를 결정하는 개념
-- COMMIT   : 테이블에 변경된 작업 내용 반영
-- ROLLBACK : 작업 이전 상태로 원복 (이전 COMMIT을 기준으로 삼는다)
-- 자동 COMMIT   : CREATE TABLE 실행 시
-- 자동 ROLLBACK : 자연재해, 정전
CREATE TABLE DEPT_TCL AS SELECT * FROM DEPT;

-- 데이터 입력, 수정, 삭제
INSERT INTO DEPT_TCL VALUES (50, 'DATABASE', 'SEOUL');
UPDATE DEPT_TCL SET LOC = 'BUSAN' WHERE DEPTNO = 40;
DELETE FROM DEPT_TCL WHERE DNAME = 'RESEARCH';
SELECT * FROM DEPT_TCL;
SELECT * FROM DEPT;
-- 명령어 실행 취소
ROLLBACK;

-- 데이터 입력, 수정, 삭제
INSERT INTO DEPT_TCL VALUES (50, 'NETWORK', 'SEOUL');
UPDATE DEPT_TCL SET LOC = 'BUSAN' WHERE DEPTNO = 20;
DELETE FROM DEPT_TCL WHERE DEPTNO = 40;

-- 명령어 반영
COMMIT;

DELETE FROM DEPT_TCL WHERE DEPTNO = 50;

UPDATE DEPT_TCL SET LOC = 'SEOUL' WHERE DEPTNO = 30;

---- 데이터 정의어 ----
-- DDL : DATA DEFINITION LANGUAGE
-- 객체 생성, 변경, 삭제 (
-- CREATE 객체 종류 : 객체 생성
-- ALTER 객체 종류  : 객체 변경 (테이블 구조 변경)
-- RENAME 객체     : 테이블 이름 변경
-- TRUNCATE 객체   : 특정 테이블의 모든 데이터를 삭제
-- DROP 객체 종류   : 객체 삭제 (테이블 삭제)


-- 타입
-- 숫자 : NUMBER, NUMBER(1), NUMBER(10, 2)
-- 문자 : VARCHAR2(10) - 가변, CHAR(10) - 고정
-- 날짜 : DATE, TIMESTAMP

--- CREATE ---
-- 부서 : 부서 번호, 부서명, 근무지 
CREATE TABLE DEPT_TEMP (
    DEPTNO NUMBER(2), DNAME VARCHAR2(10), LOC VARCHAR2(10)
);

SELECT * FROM DEPT_TEMP;
DESC DEPT_TEMP;

INSERT ALL
    INTO DEPT_TEMP VALUES (10, 'ACCOUNTING', 'NEW YORK')
    INTO DEPT_TEMP VALUES (20, 'RESEARCH', 'DALLAS')
    INTO DEPT_TEMP VALUES (30, 'SALES', 'CHICAGO')
    INTO DEPT_TEMP VALUES (40, 'OPERATOR', 'BOSTERN')
    SELECT * FROM DUAL;
    
-- 모든 열의 각 자료형을 정의해서 테이블 생성
CREATE TABLE EMP_DDL(
    EMPNO NUMBER(4),
    ENAME VARCHAR2(10),
    JOB VARCHAR2(9),
    MGR NUMBER(4),
    HIREDATE DATE,
    SAL NUMBER(7, 2),
    COMM NUMBER(7, 2),
    DEPTNO NUMBER(2)
);

-- 다른 테이블을 복사하여 만들기
CREATE TABLE DEPT_DDL AS SELECT * FROM DEPT;

-- 다른 테이블의 일부를 복사하여 테이블 생성
CREATE TABLE EMP_DDL_30 AS SELECT * FROM EMP WHERE DEPTNO = 30;
SELECT * FROM EMP_DDL_30;

-- 열 구조만 복사해서 새 테이블 생성
CREATE TABLE EMPDEPT_DDL
    AS SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, D.DEPTNO, D.DNAME, D.LOC
    FROM EMP E, DEPT D WHERE 1 <> 1;

-- 데이터가 없는 테이블
SELECT * FROM EMPDEPT_DDL;

--- ALTER ---
-- 객체 변경
-- ADD    : 열 추가
-- RENAME : 열 이름 변경
-- MODIFY : 열 크기 변경
-- DROP   : 특정 열 삭제
CREATE TABLE EMP_ALTER AS SELECT * FROM EMP;
SELECT * FROM EMP_ALTER;

-- ALTER 명령어로 HP 추가하기
ALTER TABLE EMP_ALTER ADD HP VARCHAR2(20);

-- ALTER 명령어로 HP 열 이름을 TEL로 변경하기
ALTER TABLE EMP_ALTER RENAME COLUMN HP TO TEL;

-- ALTER 명령어로 EMPNO 열 길이 변경하기
ALTER TABLE EMP_ALTER MODIFY EMPNO NUMBER(5);
DESC EMP_ALTER;

-- ALTER 명령어로 TEL 열 삭제하기
ALTER TABLE EMP_ALTER DROP COLUMN TEL;

--- RENAME --
-- 테이블 이름 변경
RENAME EMP_ALTER TO EMP_RENAME;
DESC EMP_ALTER; -- ERROR
SELECT * FROM EMP_RENAME;

--- TRUNCATE ---
-- 테이블 데이터 삭제
TRUNCATE TABLE EMP_RENAME;

--- DROP ---
-- 테이블 삭제
DROP TABLE EMP_RENAME;

-- 휴지통 보기
SELECT * FROM USER_RECYCLEBIN;

-- 휴지통 복구
FLASHBACK TABLE EMP_RENAME TO BEFORE DROP;

-- 휴지통 비우기
PURGE RECYCLEBIN;

-- 휴지통 패스 (복구 안됨)
DROP TABLE EMP_RENAME PURGE;

-- 책 324P 실습 문제
-- EMP_HW 테이블 생성
CREATE TABLE EMP_HW (
    EMPNO NUMBER(4),
    ENAME VARCHAR2(10),
    JOB VARCHAR2(9),
    MGR NUMBER(4),
    HIREDATE DATE,
    SAL NUMBER(7, 2),
    COMM NUMBER(7, 2),
    DEPTNO NUMBER(2)
);

SELECT * FROM EMP_HW;

-- EMP_HW 테이블에 BIGO 열 추가
ALTER TABLE EMP_HW ADD BIGO VARCHAR2(20);

-- EMP_HW 테이블의 BIGO 열 크기를 30으로 변경
ALTER TABLE EMP_HW MODIFY BIGO VARCHAR2(30);
DESC EMP_HW;

-- EMP_HW 테이블의 BIGO 열 이름을 REMARK로 변경
ALTER TABLE EMP_HW RENAME COLUMN BIGO TO REMARK;

-- EMP_HW 테이블에 EMP 테이블의 데이터를 모두 저장. REMARK는 NULL
INSERT INTO EMP_HW (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO, REMARK)
    SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO, NULL FROM EMP;

-- EMP_HW 테이블 삭제
DROP TABLE EMP_HW;
